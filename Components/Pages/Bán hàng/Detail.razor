@page "/Detail/{productId:int}"
@using BanSach.Components.Model
@using BanSach.Components.Services
@using BanSach.Components.IService
@using Microsoft.AspNetCore.Http
@using System.IO
@using System.Globalization
@inject IWebHostEnvironment Environment
@inject NavigationManager navigationManager
@inject IItemManagement ItemManagement
@inject HttpClient httpClient
@rendermode InteractiveServer
@inject IDialogService DialogService
@inject ICartService CartService
@inject ISnackbar Snackbar
<MudGrid Class="pt-2">
    <MudItem xs="12" sm="12">
        @if (product != null)
        {
            <MudGrid>
                <MudItem xs="2" sm="1" md="1"></MudItem>
                <MudItem xs="12" sm="12" md="4">
                    <!-- Hình ảnh sản phẩm -->
                    <MudImage ObjectFit="ObjectFit.Cover" Style="height:300px;  " Src="@product.Img" Class="rounded-lg" />
                </MudItem>

                <MudItem xs="12" sm="12" md="7">
                    <div style="padding: 30px;">
                        <MudGrid Style="display: flex; flex-direction: column;">
                            <MudGrid Style="margin-bottom: 20px;">
                                <MudItem Class="pt-1">
                                    <div style="font-weight:bold; font-size: 1.5em; padding-top: 10px">@product.ProductName</div>
                                </MudItem>
                            </MudGrid>
                            <MudGrid Style="padding-top:10px; display: flex; align-items: center;">
                                <MudItem Class="pt-1" md="4" sm="4" xs="4" style="margin-top: 0;">
                                    <MudRating Disabled="true" SelectedValue="4" />
                                </MudItem>
                                <MudItem Class="pt-1" md="8" sm="8" xs="8">
                                    <div>Lượt mua:</div>
                                </MudItem>
                            </MudGrid>
                        </MudGrid>

                        <!-- Giá sản phẩm -->
                        <MudItem Class="pt-1">
                            <div style="font-weight:bold; font-size: 1.5em">
                                @string.Format(new CultureInfo("vi-VN"), "{0:N0}", product.SellPrice) vnđ
                            </div>
                        </MudItem>

                        <!-- Chính sách trả hàng -->
                        <MudItem Class="pt-1">
                            <div>Chính sách trả hàng: Trả hàng trong 15 ngày</div>
                        </MudItem>

                        <!-- Số lượng -->
                        <MudItem>
                            <div style="display: flex; align-items: center;">
                                Số lượng:
                                <MudNumericField T="int" @bind-Value="@quantity" Min="1" Style="margin-left: 10px; width: 50px;" />
                            </div>
                        </MudItem>

                        <!-- Các nút mua hàng và thêm vào giỏ -->
                        <MudItem>
                            <MudButton Class="pt-1" style="padding:10px" ButtonType="ButtonType.Submit" Variant="Variant.Filled">
                                Mua hàng
                            </MudButton>
                            <MudButton Class="pt-1" style="padding:10px" ButtonType="ButtonType.Submit" Variant="Variant.Filled" OnClick="AddCart">
                                Thêm vào giỏ hàng
                            </MudButton>
                        </MudItem>
                    </div>
                </MudItem>
            </MudGrid>

            <!-- Chi tiết sản phẩm -->
            <MudGrid Style="margin-bottom: 10px;">
                <MudItem md="1" sm="1" xs="1"></MudItem>
                <MudItem md="10" sm="10" xs="10">
                    <div style="font-weight:bold">
                        <h2>CHI TIẾT SẢN PHẨM</h2>
                    </div>
                    <div><strong>Danh mục:</strong> @categoryName</div>
                    <div><strong>Tác giả:</strong> @product.Author</div>
                    <div><strong>Nhà xuất bản:</strong> @product.Publisher</div>
                    <div><strong>Số trang:</strong> @product.PageNumber</div>
                    <div><strong>Kho:</strong> @product.Quatity</div>
                    <div><strong>Năm sản xuất:</strong> @product.Year</div>
                    <br />
                    <div style="font-weight: bold">
                        <h2>MÔ TẢ SẢN PHẨM:</h2>
                    </div>
                    <div>@product.Description</div>
                </MudItem>
            </MudGrid>
        }
    </MudItem>
</MudGrid>


@code {
    public int quantity = 1;
    public int categoryId;
    public string? categoryName;
    private Product? product;
    private Product_cart product_cart = new Product_cart();
    private User user = new User();
    private Category category = new Category();
    private List<Category> Categories = new List<Category>();
    private List<Product> products = new List<Product>();
    private List<Product_cart> product_carts = new List<Product_cart>();

    [Parameter]
    public int productId { get; set; }
    private List<string> uploadedImages = new List<string>();
    private List<IBrowserFile> selectedFiles = new List<IBrowserFile>();

    public async Task<Product> GetProduct()
    {
        var product = await ItemManagement.GetItemById(productId);
        if (product == null)
        {
            throw new Exception("Product not found");
        }
        return product;
    }

    public async Task<Category> GetCategory()
    {
        var category = await ItemManagement.GetCategoryById(categoryId);
        if (category == null)
        {
            throw new Exception("Category not found");
        }
        return category;
    }
    protected override async Task OnInitializedAsync()
    {
        products = await ItemManagement.GetAllItem();
        product = await GetProduct();
        categoryId = product.CategoryId;
        category = await GetCategory();
        categoryName = category.CategoryName;
        product_carts = await CartService.GetAllPCart();
        Categories = await ItemManagement.GetAllCategogy();
    }
    private async Task<Product_cart> CreatProductCart() => await CartService.CreatePCart(product_cart);
    private async Task AddCart()
    {
        if (product != null && product_carts != null)
        {
            DateTime thoigian = DateTime.Now;
            Product_cart p = product_carts.FirstOrDefault(p => p.ProductId == product.ProductId);
            if (p != null)
            {
                System.Diagnostics.Debug.WriteLine("test");
                System.Diagnostics.Debug.WriteLine(p.ProductId);
                p.Updated = thoigian;
                p.Quatity += quantity;
                System.Diagnostics.Debug.WriteLine("Sản phẩm đã có trong giỏ hàng, cập nhật số lượng.");
                await CartService.UpdateCart(p);

            }
            else
            {
                product_cart.Created = thoigian;
                product_cart.ProductId = productId;
                product_cart.Quatity = quantity;
                await CreatProductCart();
                System.Diagnostics.Debug.WriteLine("Đần.");
            }

        }
    }
}

